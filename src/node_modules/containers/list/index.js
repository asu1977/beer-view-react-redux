import React from 'react'
import {connect} from 'react-redux'
import R from 'ramda'
import {Link} from 'react-router'

import { 
    getListItemsWithCount,
    getTotalListPrice 
} from 'selectors';

import {
    removeItemFromList,
    listCheckout,
    cleanList
} from 'actions'

const List = ({
    items,
    totalPrice,
    removeItemFromList,
    listCheckout,
    cleanList
}) => {
    const isListEmpty = R.isEmpty(items)

    const renderContent = () => (
        <div>
            {isListEmpty && <div>Список пуст</div>}

            <div className='table-responsive'>
                <table className='table-bordered table-striped table-condensed cf'>
                    <tbody>
                        {items.map((item, index) => 
                            <tr
                                key={index}
                                className='item-checout'
                            >
                                <td className='first-column-checkout'>
                                    <img 
                                        className='img-thumbnail'
                                        src={item.image}
                                        alt={item.name}
                                    />
                                </td>
                                <td>{item.name}</td>
                                <td>₽{item.price}</td>
                                <td>{item.count}</td>
                                <td>
                                    <span 
                                        onClick={() => removeItemFromList(item.id)}
                                        className='delete-cart'
                                    />
                                </td>
                            </tr>
                        )}
                    </tbody>
                </table>
            </div>
            {
                R.not(isListEmpty) &&
                    <div className='row'>
                        <div className='pull-right total-user-checkout'>
                            <b>Total:</b>
                            ₽{totalPrice}
                        </div>
                    </div>
            }
        </div>        
    )
    const renderSidebar = () => (
        <div>
            <Link
                to='/'
                className='btn btn-info'
            >
                <span className='glyphicon glyphicon-info-sign'></span>   
                <span>Продолжить выбор</span>
            </Link>
            {
                R.not(isListEmpty) &&
                    <div>
                        <button
                            onClick={cleanList}
                            className='btn btn-danger'
                        >
                            <span className='glyphicon glyphicon-trash' />
                            Очистить список
                        </button>
                        <button
                            className='btn btn-success'
                            onClick={() => listCheckout(items)}
                        >
                            <span className='glyphicon glyphicon-envelope' />
                            Checkout
                        </button>
                    </div>
            }
        </div>
    )
    return (
        <div className='view-container'>
            <div className='container'>
                <div className='row'>
                    <div className='col-md-9'>
                        {renderContent()}
                    </div>
                    <div className='col-md-3 btn-user-checkout'>
                        {renderSidebar()}
                    </div>
                </div>
            </div>
        </div>
    )
}

const mapStateToProps = state => ({
    items: getListItemsWithCount(state),
    totalPrice: getTotalListPrice(state)
})

const mapDispatchToProps = {
    removeItemFromList,
    listCheckout,
    cleanList
}

export default connect(mapStateToProps, mapDispatchToProps) (List)