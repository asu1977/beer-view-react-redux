import React, {Component} from 'react'
import {connect} from 'react-redux'
import {Link} from 'react-router'
import R from 'ramda'

import {fetchItemById, addItemToList} from 'actions'
import {getItemById} from 'selectors'
import List from 'components/list'

class Item extends Component {
    componentDidMount () {
        this.props.fetchItemById(this.props.params.id)
    }

    renderFields() {
        const {item} = this.props
        const columnFields = R.compose(
            R.toPairs,
            R.pick([
                'alco',
                'caloric'
            ])
        )(item)
        return columnFields.map(([key, value]) => (
            <div className='column' key={key}>
                <div className='ab-details-title'>
                    <p>{key}</p>
                </div>
                <div className='ab-details-info'>
                    {value}
                </div>
            </div>
        ))
    }
 
    renderContent () {
        const {item} = this.props

        return (
            <div className='thumbnail'>
                <div className='row'>
                    <div className='col-md-6'>
                        <img
                            className='img-thumbnail' 
                            src={item.image}
                            alt={item.name}
                        />
                    </div>
                    <div className='col-md-6'>
                        {this.renderFields()}
                    </div>
                </div>
                <div className='caption-full'>
                    {/* <h4 className='pull-right'>{item.price}</h4> */}
                    <h4>{item.description}</h4>
                </div>
            </div>
        )
    }

    renderSidebar() {
        const {item, addItemToList} = this.props
        return (
            <div>
                <p className='lead'>Быстрый поиск</p>
                <List />
                <div className='form-group'>
                    <h1>{item.name}</h1>
                    <h2>₽{item.price}</h2>
                </div>
                <Link 
                    to='/' 
                    className='btn btn-info btn-block'
                >
                    Вернуться к выбору 
                </Link>
                <button 
                    type='button'
                    className='btn btn-success btn-block'
                    onClick={() => addItemToList(item.id)}
                >
                    Добавить к списку
                </button>
            </div>
        )
    }

    render () {
        const {item} = this.props
        return (
            <div className='view-container'>
                <div className='container'>
                    <div className='row'>
                        <div className='col-md-9'>
                            {item && this.renderContent()}
                        </div>
                        <div className='col-md-3'>
                            {item && this.renderSidebar()}
                        </div>
                    </div>
                </div>
            </div>
        )
    }
}

const mapStateToProps = state => ({
    item: getItemById(state, state.itemPage.id)
})

const mapDispatchToProps = {
    fetchItemById, addItemToList
}

export default connect(mapStateToProps, mapDispatchToProps) (Item);